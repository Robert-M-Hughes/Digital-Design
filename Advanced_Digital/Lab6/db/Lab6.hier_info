|Lab6
clk => clk.IN1
mode => mode.IN1
readWrite => sync:xSyncButton.inSig
writeData[0] => writeData[0].IN1
writeData[1] => writeData[1].IN1
writeData[2] => writeData[2].IN1
writeData[3] => writeData[3].IN1
writeData[4] => writeData[4].IN1
writeData[5] => writeData[5].IN1
writeData[6] => writeData[6].IN1
writeData[7] => writeData[7].IN1
writeData[8] => writeData[8].IN1
writeData[9] => writeData[9].IN1
writeData[10] => writeData[10].IN1
writeData[11] => writeData[11].IN1
writeData[12] => writeData[12].IN1
writeData[13] => writeData[13].IN1
writeData[14] => writeData[14].IN1
full <= memStateMachine:xReadWrite.full
empty <= memStateMachine:xReadWrite.empty
sevenSegments[0] <= sevenSegment:xSeg0.out
sevenSegments[1] <= sevenSegment:xSeg0.out
sevenSegments[2] <= sevenSegment:xSeg0.out
sevenSegments[3] <= sevenSegment:xSeg0.out
sevenSegments[4] <= sevenSegment:xSeg0.out
sevenSegments[5] <= sevenSegment:xSeg0.out
sevenSegments[6] <= sevenSegment:xSeg0.out
sevenSegments[7] <= sevenSegment:xSeg1.out
sevenSegments[8] <= sevenSegment:xSeg1.out
sevenSegments[9] <= sevenSegment:xSeg1.out
sevenSegments[10] <= sevenSegment:xSeg1.out
sevenSegments[11] <= sevenSegment:xSeg1.out
sevenSegments[12] <= sevenSegment:xSeg1.out
sevenSegments[13] <= sevenSegment:xSeg1.out
sevenSegments[14] <= sevenSegment:xSeg2.out
sevenSegments[15] <= sevenSegment:xSeg2.out
sevenSegments[16] <= sevenSegment:xSeg2.out
sevenSegments[17] <= sevenSegment:xSeg2.out
sevenSegments[18] <= sevenSegment:xSeg2.out
sevenSegments[19] <= sevenSegment:xSeg2.out
sevenSegments[20] <= sevenSegment:xSeg2.out
sevenSegments[21] <= sevenSegment:xSeg3.out
sevenSegments[22] <= sevenSegment:xSeg3.out
sevenSegments[23] <= sevenSegment:xSeg3.out
sevenSegments[24] <= sevenSegment:xSeg3.out
sevenSegments[25] <= sevenSegment:xSeg3.out
sevenSegments[26] <= sevenSegment:xSeg3.out
sevenSegments[27] <= sevenSegment:xSeg3.out


|Lab6|sync:xSyncButton
clk => flip_3~reg0.CLK
clk => flip_2.CLK
clk => flip_1.CLK
rst => flip_3~reg0.ACLR
rst => flip_2.ACLR
rst => flip_1.ACLR
inSig => flip_1.DATAIN
flip_3 <= flip_3~reg0.DB_MAX_OUTPUT_PORT_TYPE
rising_edge <= rising_edge.DB_MAX_OUTPUT_PORT_TYPE
falling_edge <= falling_edge.DB_MAX_OUTPUT_PORT_TYPE


|Lab6|memStateMachine:xReadWrite
clk => dualPortMemory:memory.clk
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
clk => state[3].CLK
clk => state[4].CLK
clk => state[5].CLK
clk => state[6].CLK
clk => state[7].CLK
clk => state[8].CLK
clk => state[9].CLK
clk => state[10].CLK
clk => state[11].CLK
clk => state[12].CLK
clk => state[13].CLK
clk => state[14].CLK
clk => state[15].CLK
clk => state[16].CLK
clk => state[17].CLK
clk => state[18].CLK
clk => state[19].CLK
clk => state[20].CLK
clk => state[21].CLK
clk => state[22].CLK
clk => state[23].CLK
clk => state[24].CLK
clk => state[25].CLK
clk => state[26].CLK
clk => state[27].CLK
clk => state[28].CLK
clk => state[29].CLK
clk => state[30].CLK
clk => state[31].CLK
clk => readAddress[0].CLK
clk => readAddress[1].CLK
clk => readAddress[2].CLK
clk => readAddress[3].CLK
clk => writeAddress[0].CLK
clk => writeAddress[1].CLK
clk => writeAddress[2].CLK
clk => writeAddress[3].CLK
mode => Selector0.IN0
mode => nextState.DATAA
mode => Selector0.IN1
mode => nextState.DATAA
mode => Selector0.IN2
readWrite => always1.IN1
readWrite => always1.IN1
writeData[0] => dualPortMemory:memory.dataA[0]
writeData[1] => dualPortMemory:memory.dataA[1]
writeData[2] => dualPortMemory:memory.dataA[2]
writeData[3] => dualPortMemory:memory.dataA[3]
writeData[4] => dualPortMemory:memory.dataA[4]
writeData[5] => dualPortMemory:memory.dataA[5]
writeData[6] => dualPortMemory:memory.dataA[6]
writeData[7] => dualPortMemory:memory.dataA[7]
writeData[8] => dualPortMemory:memory.dataA[8]
writeData[9] => dualPortMemory:memory.dataA[9]
writeData[10] => dualPortMemory:memory.dataA[10]
writeData[11] => dualPortMemory:memory.dataA[11]
writeData[12] => dualPortMemory:memory.dataA[12]
writeData[13] => dualPortMemory:memory.dataA[13]
writeData[14] => dualPortMemory:memory.dataA[14]
full <= full.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
readData[0] <= dualPortMemory:memory.qB[0]
readData[1] <= dualPortMemory:memory.qB[1]
readData[2] <= dualPortMemory:memory.qB[2]
readData[3] <= dualPortMemory:memory.qB[3]
readData[4] <= dualPortMemory:memory.qB[4]
readData[5] <= dualPortMemory:memory.qB[5]
readData[6] <= dualPortMemory:memory.qB[6]
readData[7] <= dualPortMemory:memory.qB[7]
readData[8] <= dualPortMemory:memory.qB[8]
readData[9] <= dualPortMemory:memory.qB[9]
readData[10] <= dualPortMemory:memory.qB[10]
readData[11] <= dualPortMemory:memory.qB[11]
readData[12] <= dualPortMemory:memory.qB[12]
readData[13] <= dualPortMemory:memory.qB[13]
readData[14] <= dualPortMemory:memory.qB[14]


|Lab6|memStateMachine:xReadWrite|dualPortMemory:memory
clk => memory.we_a.CLK
clk => memory.waddr_a[2].CLK
clk => memory.waddr_a[1].CLK
clk => memory.waddr_a[0].CLK
clk => memory.data_a[14].CLK
clk => memory.data_a[13].CLK
clk => memory.data_a[12].CLK
clk => memory.data_a[11].CLK
clk => memory.data_a[10].CLK
clk => memory.data_a[9].CLK
clk => memory.data_a[8].CLK
clk => memory.data_a[7].CLK
clk => memory.data_a[6].CLK
clk => memory.data_a[5].CLK
clk => memory.data_a[4].CLK
clk => memory.data_a[3].CLK
clk => memory.data_a[2].CLK
clk => memory.data_a[1].CLK
clk => memory.data_a[0].CLK
clk => memory.we_b.CLK
clk => memory.waddr_b[2].CLK
clk => memory.waddr_b[1].CLK
clk => memory.waddr_b[0].CLK
clk => memory.data_b[14].CLK
clk => memory.data_b[13].CLK
clk => memory.data_b[12].CLK
clk => memory.data_b[11].CLK
clk => memory.data_b[10].CLK
clk => memory.data_b[9].CLK
clk => memory.data_b[8].CLK
clk => memory.data_b[7].CLK
clk => memory.data_b[6].CLK
clk => memory.data_b[5].CLK
clk => memory.data_b[4].CLK
clk => memory.data_b[3].CLK
clk => memory.data_b[2].CLK
clk => memory.data_b[1].CLK
clk => memory.data_b[0].CLK
clk => qB[0]~reg0.CLK
clk => qB[1]~reg0.CLK
clk => qB[2]~reg0.CLK
clk => qB[3]~reg0.CLK
clk => qB[4]~reg0.CLK
clk => qB[5]~reg0.CLK
clk => qB[6]~reg0.CLK
clk => qB[7]~reg0.CLK
clk => qB[8]~reg0.CLK
clk => qB[9]~reg0.CLK
clk => qB[10]~reg0.CLK
clk => qB[11]~reg0.CLK
clk => qB[12]~reg0.CLK
clk => qB[13]~reg0.CLK
clk => qB[14]~reg0.CLK
clk => qA[0]~reg0.CLK
clk => qA[1]~reg0.CLK
clk => qA[2]~reg0.CLK
clk => qA[3]~reg0.CLK
clk => qA[4]~reg0.CLK
clk => qA[5]~reg0.CLK
clk => qA[6]~reg0.CLK
clk => qA[7]~reg0.CLK
clk => qA[8]~reg0.CLK
clk => qA[9]~reg0.CLK
clk => qA[10]~reg0.CLK
clk => qA[11]~reg0.CLK
clk => qA[12]~reg0.CLK
clk => qA[13]~reg0.CLK
clk => qA[14]~reg0.CLK
clk => memory.CLK0
clk => memory.PORTBCLK0
enA => memory.we_a.DATAIN
enA => memory.WE
enB => memory.we_b.DATAIN
enB => memory.PORTBWE
addrA[0] => memory.waddr_a[0].DATAIN
addrA[0] => memory.WADDR
addrA[0] => memory.RADDR
addrA[1] => memory.waddr_a[1].DATAIN
addrA[1] => memory.WADDR1
addrA[1] => memory.RADDR1
addrA[2] => memory.waddr_a[2].DATAIN
addrA[2] => memory.WADDR2
addrA[2] => memory.RADDR2
addrB[0] => memory.waddr_b[0].DATAIN
addrB[0] => memory.PORTBWADDR
addrB[0] => memory.PORTBRADDR
addrB[1] => memory.waddr_b[1].DATAIN
addrB[1] => memory.PORTBWADDR1
addrB[1] => memory.PORTBRADDR1
addrB[2] => memory.waddr_b[2].DATAIN
addrB[2] => memory.PORTBWADDR2
addrB[2] => memory.PORTBRADDR2
dataA[0] => memory.data_a[0].DATAIN
dataA[0] => memory.DATAIN
dataA[1] => memory.data_a[1].DATAIN
dataA[1] => memory.DATAIN1
dataA[2] => memory.data_a[2].DATAIN
dataA[2] => memory.DATAIN2
dataA[3] => memory.data_a[3].DATAIN
dataA[3] => memory.DATAIN3
dataA[4] => memory.data_a[4].DATAIN
dataA[4] => memory.DATAIN4
dataA[5] => memory.data_a[5].DATAIN
dataA[5] => memory.DATAIN5
dataA[6] => memory.data_a[6].DATAIN
dataA[6] => memory.DATAIN6
dataA[7] => memory.data_a[7].DATAIN
dataA[7] => memory.DATAIN7
dataA[8] => memory.data_a[8].DATAIN
dataA[8] => memory.DATAIN8
dataA[9] => memory.data_a[9].DATAIN
dataA[9] => memory.DATAIN9
dataA[10] => memory.data_a[10].DATAIN
dataA[10] => memory.DATAIN10
dataA[11] => memory.data_a[11].DATAIN
dataA[11] => memory.DATAIN11
dataA[12] => memory.data_a[12].DATAIN
dataA[12] => memory.DATAIN12
dataA[13] => memory.data_a[13].DATAIN
dataA[13] => memory.DATAIN13
dataA[14] => memory.data_a[14].DATAIN
dataA[14] => memory.DATAIN14
dataB[0] => memory.data_b[0].DATAIN
dataB[0] => memory.PORTBDATAIN
dataB[1] => memory.data_b[1].DATAIN
dataB[1] => memory.PORTBDATAIN1
dataB[2] => memory.data_b[2].DATAIN
dataB[2] => memory.PORTBDATAIN2
dataB[3] => memory.data_b[3].DATAIN
dataB[3] => memory.PORTBDATAIN3
dataB[4] => memory.data_b[4].DATAIN
dataB[4] => memory.PORTBDATAIN4
dataB[5] => memory.data_b[5].DATAIN
dataB[5] => memory.PORTBDATAIN5
dataB[6] => memory.data_b[6].DATAIN
dataB[6] => memory.PORTBDATAIN6
dataB[7] => memory.data_b[7].DATAIN
dataB[7] => memory.PORTBDATAIN7
dataB[8] => memory.data_b[8].DATAIN
dataB[8] => memory.PORTBDATAIN8
dataB[9] => memory.data_b[9].DATAIN
dataB[9] => memory.PORTBDATAIN9
dataB[10] => memory.data_b[10].DATAIN
dataB[10] => memory.PORTBDATAIN10
dataB[11] => memory.data_b[11].DATAIN
dataB[11] => memory.PORTBDATAIN11
dataB[12] => memory.data_b[12].DATAIN
dataB[12] => memory.PORTBDATAIN12
dataB[13] => memory.data_b[13].DATAIN
dataB[13] => memory.PORTBDATAIN13
dataB[14] => memory.data_b[14].DATAIN
dataB[14] => memory.PORTBDATAIN14
qA[0] <= qA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[1] <= qA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[2] <= qA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[3] <= qA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[4] <= qA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[5] <= qA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[6] <= qA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[7] <= qA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[8] <= qA[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[9] <= qA[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[10] <= qA[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[11] <= qA[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[12] <= qA[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[13] <= qA[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qA[14] <= qA[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[0] <= qB[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[1] <= qB[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[2] <= qB[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[3] <= qB[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[4] <= qB[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[5] <= qB[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[6] <= qB[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[7] <= qB[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[8] <= qB[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[9] <= qB[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[10] <= qB[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[11] <= qB[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[12] <= qB[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[13] <= qB[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
qB[14] <= qB[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Lab6|sevenSegment:xSeg3
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Lab6|sevenSegment:xSeg2
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Lab6|sevenSegment:xSeg1
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Lab6|sevenSegment:xSeg0
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


